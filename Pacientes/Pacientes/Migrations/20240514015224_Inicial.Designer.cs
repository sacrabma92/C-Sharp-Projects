// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pacientes;

#nullable disable

namespace Pacientes.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240514015224_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pacientes.Entidades.Alimentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Alimentaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nombre = "fruta"
                        },
                        new
                        {
                            Id = 2,
                            nombre = "verdura"
                        },
                        new
                        {
                            Id = 3,
                            nombre = "granos"
                        },
                        new
                        {
                            Id = 4,
                            nombre = "proteinas magras"
                        },
                        new
                        {
                            Id = 5,
                            nombre = "grasas saludables"
                        },
                        new
                        {
                            Id = 6,
                            nombre = "azúcar"
                        },
                        new
                        {
                            Id = 7,
                            nombre = "alimentos procesados"
                        },
                        new
                        {
                            Id = 8,
                            nombre = "agua"
                        },
                        new
                        {
                            Id = 9,
                            nombre = "lacteos"
                        });
                });

            modelBuilder.Entity("Pacientes.Entidades.Dieta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dietas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nombre = "peso bajo"
                        },
                        new
                        {
                            Id = 2,
                            nombre = "peso normal"
                        },
                        new
                        {
                            Id = 3,
                            nombre = "sobre peso"
                        },
                        new
                        {
                            Id = 4,
                            nombre = "obesidad"
                        });
                });

            modelBuilder.Entity("Pacientes.Entidades.Ejercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ejercicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nombre = "caminar"
                        },
                        new
                        {
                            Id = 2,
                            nombre = "correr"
                        },
                        new
                        {
                            Id = 3,
                            nombre = "nadar"
                        },
                        new
                        {
                            Id = 4,
                            nombre = "yoga"
                        },
                        new
                        {
                            Id = 5,
                            nombre = "gimnacio"
                        });
                });

            modelBuilder.Entity("Pacientes.Entidades.Enfermedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Enfermedades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nombre = "desnutricion"
                        },
                        new
                        {
                            Id = 2,
                            nombre = "anorexia"
                        },
                        new
                        {
                            Id = 3,
                            nombre = "bulimia"
                        },
                        new
                        {
                            Id = 4,
                            nombre = "depresion"
                        },
                        new
                        {
                            Id = 5,
                            nombre = "ansiedad"
                        });
                });

            modelBuilder.Entity("Pacientes.Entidades.Imc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<double>("altura")
                        .HasColumnType("float");

                    b.Property<double>("peso")
                        .HasColumnType("float");

                    b.Property<double>("totalimc")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Imc");
                });

            modelBuilder.Entity("Pacientes.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fechanac")
                        .HasColumnType("date");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Pacientes.Entidades.PacientePeso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DietaId")
                        .HasColumnType("int");

                    b.Property<int>("EjerciciosId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DietaId");

                    b.HasIndex("EjerciciosId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesPesos");
                });

            modelBuilder.Entity("Pacientes.Entidades.TipoEnfermedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentacionId")
                        .HasColumnType("int");

                    b.Property<int>("DietaId")
                        .HasColumnType("int");

                    b.Property<int>("EnfermedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlimentacionId");

                    b.HasIndex("DietaId");

                    b.HasIndex("EnfermedadId");

                    b.ToTable("TiposEnfermedades");
                });

            modelBuilder.Entity("Pacientes.Entidades.Imc", b =>
                {
                    b.HasOne("Pacientes.Entidades.Paciente", null)
                        .WithMany("Imc")
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Pacientes.Entidades.PacientePeso", b =>
                {
                    b.HasOne("Pacientes.Entidades.Dieta", "Dieta")
                        .WithMany("PacientePeso")
                        .HasForeignKey("DietaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pacientes.Entidades.Ejercicios", "Ejercicios")
                        .WithMany("PacientePeso")
                        .HasForeignKey("EjerciciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pacientes.Entidades.Paciente", "Paciente")
                        .WithMany("PacientePeso")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dieta");

                    b.Navigation("Ejercicios");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Pacientes.Entidades.TipoEnfermedad", b =>
                {
                    b.HasOne("Pacientes.Entidades.Alimentacion", "Alimentacion")
                        .WithMany("TiposEnfermedad")
                        .HasForeignKey("AlimentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pacientes.Entidades.Dieta", "Dieta")
                        .WithMany("TiposEnfermedad")
                        .HasForeignKey("DietaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pacientes.Entidades.Enfermedad", "Enfermedad")
                        .WithMany("TiposEnfermedad")
                        .HasForeignKey("EnfermedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimentacion");

                    b.Navigation("Dieta");

                    b.Navigation("Enfermedad");
                });

            modelBuilder.Entity("Pacientes.Entidades.Alimentacion", b =>
                {
                    b.Navigation("TiposEnfermedad");
                });

            modelBuilder.Entity("Pacientes.Entidades.Dieta", b =>
                {
                    b.Navigation("PacientePeso");

                    b.Navigation("TiposEnfermedad");
                });

            modelBuilder.Entity("Pacientes.Entidades.Ejercicios", b =>
                {
                    b.Navigation("PacientePeso");
                });

            modelBuilder.Entity("Pacientes.Entidades.Enfermedad", b =>
                {
                    b.Navigation("TiposEnfermedad");
                });

            modelBuilder.Entity("Pacientes.Entidades.Paciente", b =>
                {
                    b.Navigation("Imc");

                    b.Navigation("PacientePeso");
                });
#pragma warning restore 612, 618
        }
    }
}
